[
  {
    "label": "search:files",
    "command": "zed \"$(tv files --input ${ZED_SELECTED_TEXT:-''} --select-1 --no-remote --custom-header 'Find files')\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:files:cwd",
    "command": "cd $ZED_DIRNAME; zed \"$(tv files --input ${ZED_SELECTED_TEXT:-''} --select-1 --no-remote --custom-header \"Find files in ${ZED_DIRNAME}\")\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:text",
    "command": "zed \"$(tv text --input ${ZED_SELECTED_TEXT:-''} --select-1 --no-remote --exact --custom-header 'Find in files')\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:text:cwd",
    "command": "cd $ZED_DIRNAME; zed \"$(tv text --input ${ZED_SELECTED_TEXT:-''} --select-1 --exact --no-remote --custom-header \"Find in files in ${ZED_DIRNAME}\")\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:dotfiles",
    "command": "zed \"$(tv my-dotfiles --input ${ZED_SELECTED_TEXT:-''} --select-1 --no-remote --custom-header 'Find dotfiles')\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "show_summary": true,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:env",
    "command": "zed \"$(tv env --input ${ZED_SELECTED_TEXT:-''} --select-1 --no-remote --custom-header 'Find shell env vars')\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:git:mod-files",
    "command": "zed \"$(tv git-mod-files --select-1 --no-remote --custom-header 'Find git files')\"",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "lazygit:open",
    "command": "NVM_DIR=\"$HOME/.nvm\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"; nvm use; lazygit",
    "hide": "always",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "shell": {
      "program": "sh"
    }
  },
  {
    "label": "search:project",
    "command": "QUERY=${ZED_SELECTED_TEXT:-}; FILE=$(rg --column --hidden --line-number --no-heading --color=always --smart-case --colors match:fg:green --colors path:fg:white --colors path:style:nobold --glob '!**/.git/' '--glob' '!**/node_modules'  \"$QUERY\" . | fzf --ansi --delimiter : --preview 'bat --style=numbers,changes,header --color=always --highlight-line {2} {1}' --preview-window 'up:60%:+{2}+3/3' --layout=reverse --query \"$QUERY\" --print-query | tail -1); if [ -n \"$FILE\" ]; then LINE=$(echo $FILE | cut -d':' -f2); COL=$(echo $FILE | cut -d':' -f3); FILE=$(echo $FILE | cut -d':' -f1); zed $FILE:$LINE:$COL; fi",
    "env": {},
    "cwd": "${ZED_WORKTREE_ROOT}",
    "allow_concurrent_runs": false,
    "use_new_terminal": false,
    "reveal": "always",
    "hide": "on_success",
    "shell": {
      "program": "sh"
    }
  }
]
