matches:
  - trigger: "*ml"
    replace: me@anudeep.pro

  - trigger: "*fn"
    replace: () => { }

  - trigger: "*ee"
    replace: "espanso edit"

  - trigger: "*gsc"
    replace: "git switch -c"

  - trigger: "*gss"
    replace: "git switch "

  - trigger: "*gU"
    replace: "git push --set-upstream origin "

  - trigger: "*gP"
    replace: "git push origin "

  - trigger: "*gp"
    replace: "git pull --rebase origin "

  - trigger: "*gf"
    replace: "git fetch origin; git pull --rebase origin "

  - trigger: "*gc"
    replace: 'git commit -m "FLEXADMIN-$|$'

  - trigger: "*dU"
    replace: "db push --set-upstream origin "

  - trigger: "*dP"
    replace: "db push origin main"

  - trigger: "*dp"
    replace: "db pull --rebase origin "

  - trigger: "*df"
    replace: "db fetch origin; git pull --rebase origin "

  - trigger: "*dc"
    replace: db commit -m "

  - trigger: "*ll"
    replace: "{{mytime}} — #log"
    vars:
      - name: mytime
        type: date
        params:
          format: "%d-%B-%Y"
          offset: 0
          locale: en_IN

  - trigger: "*tt"
    replace: "{{mytime}} —> "
    vars:
      - name: mytime
        type: date
        params:
          format: "%H:%M"
          offset: 0
          locale: en_IN

  - trigger: "*ws"
    replace: "curl wttr.in"

  - trigger: "*ots"
    replace: "owl tubes --backend envoy stop"

  - trigger: "*otr"
    replace: "owl tubes --backend envoy stop; owl tubes --backend envoy render flex-admin-api identity conversations-api flex-admin-unify-manager --stage"

  - trigger: "*ip"
    replace: "curl ifconfig.me"

  - trigger: "*dj"
    replace: 'curl -H "Accept: text/plain" https://icanhazdadjoke.com; echo'

  - trigger: "*hl"
    replace: "atuin login -u achandrapaul"

  - trigger: "*hs"
    replace: "atuin sync"

  - trigger: "*nu"
    replace: "nvm use"

  - trigger: "*yns"
    replace: 'yarn; NODE_OPTIONS="--max-old-space-size=12192" yarn start'

  - trigger: "*ys"
    replace: "yarn; yarn start"

  - trigger: "*rc"
    replace: |
      import React from "react";

      type {{x.name}}Props = {
        $|$
      };

      const {{x.name}}: React.FC<{{x.name}}Props> = ({}) => {
        return (
          <div>
            {{x.name}} component
          </div>
        );
      };

      export default {{x.name}};
    vars:
      - name: x
        type: form
        params:
          layout: "Component Name: [[name]]"
